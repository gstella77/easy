{
  "overrides": [
    {
      "extends": [
        "plugin:@angular-eslint/recommended"
      ],
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "createDefaultProgram": true,
        "project": [
          "tsconfig.*?.json"
        ]
      },
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": [
              "Component"
            ]
          }
        ],
        "@angular-eslint/component-max-inline-declarations": [
          "error",
          {
            "animations": 8,
            "styles": 1,
            "template": 1
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "prefix": "app",
            "style": "kebab-case",
            "type": "element"
          }
        ],
        "@angular-eslint/contextual-lifecycle": [
          "error"
        ],
        "@angular-eslint/directive-class-suffix": [
          "error",
          {
            "suffixes": [
              "Directive"
            ]
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "prefix": "app",
            "style": "camelCase",
            "type": "attribute"
          }
        ],
        /* "@angular-eslint/no-autofocus": [
          "error"
        ], */
        "@angular-eslint/no-attribute-decorator": [
          "error"
        ],
        "@angular-eslint/no-conflicting-lifecycle": [
          "error"
        ],
        "@angular-eslint/no-empty-lifecycle-method": [
          "error"
        ],
        "@angular-eslint/no-forward-ref": [
          "error"
        ],
        "@angular-eslint/no-host-metadata-property": [
          "error"
        ],
        "@angular-eslint/no-input-prefix": [
          "error",
          {
            "prefixes": [
              "can",
              "did",
              "has",
              "is",
              "should",
              "will"
            ]
          }
        ],
        "@angular-eslint/no-input-rename": [
          "error"
        ],
        "@angular-eslint/no-inputs-metadata-property": [
          "error"
        ],
        "@angular-eslint/no-lifecycle-call": [
          "error"
        ],
        "@angular-eslint/no-output-native": [
          "error"
        ],
        "@angular-eslint/no-output-on-prefix": [
          "error"
        ],
        "@angular-eslint/no-output-rename": [
          "error"
        ],
        "@angular-eslint/no-outputs-metadata-property": [
          "error"
        ],
        "@angular-eslint/no-pipe-impure": [
          "error"
        ],
        "@angular-eslint/no-queries-metadata-property": [
          "error"
        ],
        "@angular-eslint/prefer-on-push-component-change-detection": [
          "error"
        ],
        "@angular-eslint/prefer-output-readonly": [
          "error"
        ],
        "@angular-eslint/pipe-prefix": [
          "error",
          {
            "prefixes": [
              "app"
            ]
          }
        ],
        "@angular-eslint/relative-url-prefix": [
          "error"
        ],
        "@angular-eslint/use-component-selector": [
          "error"
        ],
        "@angular-eslint/use-component-view-encapsulation": [
          "error"
        ],
        "@angular-eslint/use-injectable-provided-in": [
          "error"
        ],
        "@angular-eslint/use-lifecycle-interface": [
          "error"
        ],
        "@angular-eslint/use-pipe-decorator": [
          "error"
        ],
        "@angular-eslint/use-pipe-transform-interface": [
          "error"
        ],
        "@typescript-eslint/adjacent-overload-signatures": [
          "error"
        ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array",
            "readonly": "array"
          }
        ],
        /* "@typescript-eslint/await-thenable": [
          "error"
        ], */
        "@typescript-eslint/ban-ts-comment": [
          "error",
          { "minimumDescriptionLength": 10,
            "ts-check": false,
            "ts-expect-error": "allow-with-description",
            "ts-ignore": "allow-with-description",
            "ts-nocheck": "allow-with-description"
          }
        ],
        "@typescript-eslint/ban-tslint-comment": [
          "error"
        ],
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              /* "String": {
                "message": "Use string instead",
                "fixWith": "string"
              } */
            }
          }
        ],
        "@typescript-eslint/brace-style": [
          "error",
          "1tbs"
        ],
        "@typescript-eslint/class-literal-property-style": [
          "error",
          "getters"
        ],
        "@typescript-eslint/comma-dangle": [
          "error",
          "never"
        ],
        "@typescript-eslint/comma-spacing": [
          "error",
          {
            "after": true,
            "before": false
          }
        ],
        /* "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record"
        ], */
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "never"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "disallowTypeAnnotations": true,
            "prefer": "no-type-imports"
          }
        ],
        "@typescript-eslint/default-param-last": [
          "error"
        ],
        /* "@typescript-eslint/dot-notation": [
          "error",
          {
            "allowPrivateClassPropertyAccess": true
          }
        ], */
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowConciseArrowFunctionExpressionsStartingWithVoid": false,
            "allowDirectConstAssertionInArrowFunctions": false,
            "allowExpressions": false,
            "allowHigherOrderFunctions": false,
            "allowTypedFunctionExpressions": false
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "ignoredMethodNames": [

            ],
            "overrides": {
              "accessors": "explicit",
              "constructors": "explicit",
              "methods": "explicit",
              "parameterProperties": "explicit",
              "properties": "explicit"
            }
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
          "error",
          {
            "allowArgumentsExplicitlyTypedAsAny": false,
            "allowDirectConstAssertionInArrowFunctions": false,
            "allowedNames": [

            ],
            "allowHigherOrderFunctions": false,
            "allowTypedFunctionExpressions": false
          }
        ],
        "@typescript-eslint/func-call-spacing": [
          "error",
          "never"
        ],
        "@typescript-eslint/indent": [
          "error",
          "tab",
          {
            "ArrayExpression": 1,
            "CallExpression": {
              "arguments": 1
            },
            "flatTernaryExpressions": true,
            "FunctionDeclaration": {
              "body": 1,
              "parameters": 2
            },
            "FunctionExpression": {
              "body": 1,
              "parameters": 2
            },
            "ignoredNodes": [

            ],
            "ImportDeclaration": 1,
            "MemberExpression": 0,
            "ObjectExpression": 1,
            "offsetTernaryExpressions": true,
            "outerIIFEBody": 0,
            "SwitchCase": 1,
            "VariableDeclarator": {
              "const": 0,
              "let": 0,
              "var": 0
            }
          }
        ],
        "@typescript-eslint/init-declarations": [
          "error",
          "never",
          {
            "ignoreForLoopInit": true
          }
        ],
        "@typescript-eslint/keyword-spacing": [
          "error",
          {
            "after": true,
            "before": true,
            "overrides": {
              /* "if": {
                "after": true
              } */
            }
          }
        ],
        "@typescript-eslint/lines-between-class-members": [
          "error",
          "always",
          {
            "exceptAfterOverload": false,
            "exceptAfterSingleLine": true
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "comma",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "comma",
              "requireLast": true
            },
            "overrides": {
              "interface": {
                "multiline": {
                  "delimiter": "semi",
                  "requireLast": true
                },
                "singleline": {
                  "delimiter": "semi",
                  "requireLast": true
                }
              },
              "typeLiteral": {
                "multiline": {
                  "delimiter": "comma",
                  "requireLast": false
                },
                "singleline": {
                  "delimiter": "comma",
                  "requireLast": true
                }
              }
            }
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                // Index signature
                "signature",

                // Fields
                "public-static-field",
                "protected-static-field",
                "private-static-field",

                "public-decorated-field",
                "protected-decorated-field",
                "private-decorated-field",

                "public-instance-field",
                "protected-instance-field",
                "private-instance-field",

                "public-abstract-field",
                "protected-abstract-field",
                "private-abstract-field",

                "public-field",
                "protected-field",
                "private-field",

                "static-field",
                "instance-field",
                "abstract-field",

                "decorated-field",

                "field",

                // Constructors
                "public-constructor",
                "protected-constructor",
                "private-constructor",

                "constructor",

                // Methods
                "public-static-method",
                "protected-static-method",
                "private-static-method",

                "public-decorated-method",
                "protected-decorated-method",
                "private-decorated-method",

                "public-instance-method",
                "protected-instance-method",
                "private-instance-method",

                "public-abstract-method",
                "protected-abstract-method",
                "private-abstract-method",

                "public-method",
                "protected-method",
                "private-method",

                "static-method",
                "instance-method",
                "abstract-method",

                "decorated-method",

                "method"
              ],
              "order": "alphabetically"
            }
          }
        ],
        "@typescript-eslint/method-signature-style": [
          "error",
          "property"
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "format": [
              "strictCamelCase"
            ],
            "leadingUnderscore": "forbid",
            "selector": "default",
            "trailingUnderscore": "forbid"
          },
          {
            "format": [
              "strictCamelCase"
            ],
            "selector": "variableLike"
          },
          {
            "format": [
              "strictCamelCase"
            ],
            "selector": "memberLike"
          },
         /*  {
            "format": [
              "PascalCase"
            ],
            "prefix": [
              "can",
              "did",
              "has",
              "is",
              "should",
              "will"
            ],
            "selector": "variable",
            "types": [
              "boolean"
            ]
          }, */
          {
            "custom": {
              "match": false,
              "regex": "^I[A-Z]"
            },
            "format": [
              "StrictPascalCase"
            ],
            "selector": "interface"
          },
          {
            "format": [
              "StrictPascalCase"
            ],
            "selector": "typeLike"
          }
        ],
        "@typescript-eslint/no-array-constructor": [
          "error"
        ],
        /* "@typescript-eslint/no-base-to-string": [
          "error",
          {
            "ignoredTypeNames": [
              "RegExp",
              "URL",
              "URLSearchParams"
            ]
          }
        ], */
        "@typescript-eslint/no-confusing-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-dupe-class-members": [
          "error"
        ],
        "@typescript-eslint/no-duplicate-imports": [
          "error",
          {
            "includeExports": true
          }
        ],
        "@typescript-eslint/no-dynamic-delete": [
          "error"
        ],
        "@typescript-eslint/no-empty-function": [
          "error"/* ,
          {
            "allow": [
              "arrowFunctions",
              "asyncFunctions",
              "asyncMethods",
              "constructors",
              "decoratedFunctions",
              "functions",
              "generatorFunctions",
              "generatorMethods",
              "getters",
              "methods",
              "private-constructors",
              "protected-constructors",
              "setters"
            ]
          } */
        ],
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": false
          }
        ],
        "@typescript-eslint/no-explicit-any": [
          "error",
          {
            "fixToUnknown": false,
            "ignoreRestArgs": false
          }
        ],
        "@typescript-eslint/no-extra-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-extra-parens": [
          "error",
          "all",
          {
            "conditionalAssign": false,
            "enforceForArrowConditionals": false,
            "enforceForFunctionPrototypeMethods": false,
            "enforceForNewInMemberExpressions": false,
            "enforceForSequenceExpressions": false,
            "ignoreJSX": "none",
            "nestedBinaryExpressions": false,
            "returnAssign": false
          }
        ],
        "@typescript-eslint/no-extra-semi": [
          "error"
        ],
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowConstructorOnly": true,
            "allowEmpty": true,
            "allowStaticOnly": false,
            "allowWithDecorator": false
          }
        ],
        /* "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreIIFE": false,
            "ignoreVoid": false
          }
        ], */
        "@typescript-eslint/no-for-in-array": [
          "error"
        ],
        "@typescript-eslint/no-implicit-any-catch": [
          "error",
          {
            "allowExplicitAny": false
          }
        ],
        /* "@typescript-eslint/no-implied-eval": [
          "error"
        ], */
        "@typescript-eslint/no-inferrable-types": "off"/* [
          "error",
          {
            "ignoreParameters": false,
            "ignoreProperties": false
          }
        ] */,
        "@typescript-eslint/no-invalid-this": [
          "error",
          {
            "capIsConstructor": false
          }
        ],
        "@typescript-eslint/no-invalid-void-type": [
          "error",
          {
            "allowAsThisParameter": false,
            "allowInGenericTypeArguments": false
          }
        ],
        "@typescript-eslint/no-loop-func": [
          "error"
        ],
        "@typescript-eslint/no-loss-of-precision": [
          "error"
        ],
        "@typescript-eslint/no-magic-numbers": [
          "error",
          {
            "detectObjects": false,
            "enforceConst": true,
            "ignore": [
              1
            ],
            "ignoreArrayIndexes": true,
            "ignoreDefaultValues": false,
            "ignoreEnums": false,
            "ignoreNumericLiteralTypes": false,
            "ignoreReadonlyClassProperties": false
          }
        ],
        "@typescript-eslint/no-misused-new": [
          "error"
        ],
        /* "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksConditionals": true,
            "checksVoidReturn": true
          }
        ], */
        "@typescript-eslint/no-namespace": [
          "error",
          {
            "allowDeclarations": false,
            "allowDefinitionFiles": false
          }
        ],
        "@typescript-eslint/no-non-null-asserted-optional-chain": [
          "error"
        ],
        "@typescript-eslint/no-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-parameter-properties": [
          "error",
          {
            "allows": [
              "private"
            ]
          }
        ],
        "@typescript-eslint/no-redeclare": [
          "error",
          { "builtinGlobals": true,
            "ignoreDeclarationMerge": false
          }
        ],
        "@typescript-eslint/no-require-imports": [
          "error"
        ],
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "allow": [

            ],
            "builtinGlobals": true,
            "hoist": "all",
            "ignoreFunctionTypeParameterNameValueShadow": false,
            "ignoreTypeValueShadow": false
          }
        ],
        "@typescript-eslint/no-this-alias": [
          "error",
          {
            "allowDestructuring": false,
            "allowedNames": [

            ]
          }
        ],
        /* "@typescript-eslint/no-throw-literal": [
          "error"
        ], */
        "@typescript-eslint/no-type-alias": [
          "error",
          {
            "allowAliases": "never", // "always" "in-intersections" "in-unions" "in-unions-and-intersections"
            "allowCallbacks": "never",
            "allowConditionalTypes": "never",
            "allowConstructors": "never",
            "allowLiterals": "never", // "always" "in-intersections" "in-unions" "in-unions-and-intersections"
            "allowMappedTypes": "never", // "always" "in-intersections" "in-unions" "in-unions-and-intersections"
            "allowTupleTypes": "never" // "always" "in-intersections" "in-unions" "in-unions-and-intersections"
          }
        ],
       /*  "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
          "error",
          {
            "allowComparingNullableBooleansToFalse": false,
            "allowComparingNullableBooleansToTrue": false
          }
        ], */
        /* "@typescript-eslint/no-unnecessary-condition": [
          "error",
          {
            "allowConstantLoopConditions": false,
            "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
          }
        ], */
        /* "@typescript-eslint/no-unnecessary-qualifier": [
          "error"
        ], */
        /* "@typescript-eslint/no-unnecessary-type-arguments": [
          "error"
        ], */
        /* "@typescript-eslint/no-unnecessary-type-assertion": [
          "error",
          {
            "typesToIgnore": [

            ]
          }
        ], */
        /* "@typescript-eslint/no-unsafe-assignment": [
          "error"
        ], */
        /* "@typescript-eslint/no-unsafe-call": [
          "error"
        ], */
        /* "@typescript-eslint/no-unsafe-member-access": [
          "error"
        ], */
        /* "@typescript-eslint/no-unsafe-return": [
          "error"
        ], */
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": false,
            "allowTaggedTemplates": false,
            "allowTernary": false
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "all",
            "argsIgnorePattern": "",
            "caughtErrors": "all",
            "caughtErrorsIgnorePattern": "",
            "ignoreRestSiblings": false,
            "vars": "all",
            "varsIgnorePattern": ""
          }
        ],
        "@typescript-eslint/no-unused-vars-experimental": [
          "error",
          {
            "ignoreArgsIfArgsAfterAreUsed": false,
            "ignoredNamesRegex": false
          }
        ],
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "classes": true,
            "enums": true,
            "functions": true,
            "ignoreTypeReferences": false,
            "typedefs": true,
            "variables": true
          }
        ],
        "@typescript-eslint/no-useless-constructor": [
          "error"
        ],
        "@typescript-eslint/no-var-requires": [
          "error"
        ],
        "@typescript-eslint/prefer-as-const": [
          "error"
        ],
        "@typescript-eslint/prefer-enum-initializers": [
          "error"
        ],
        "@typescript-eslint/prefer-for-of": [
          "error"
        ],
        "@typescript-eslint/prefer-function-type": [
          "error"
        ],
        /* "@typescript-eslint/prefer-includes": [
          "error"
        ], */
        "@typescript-eslint/prefer-literal-enum-member": [
          "error"
        ],
        "@typescript-eslint/prefer-namespace-keyword": [
          "error"
        ],
        /* "@typescript-eslint/prefer-nullish-coalescing": [
          "error",
          {
            "ignoreConditionalTests": false,
            "ignoreMixedLogicalExpressions": false
          }
        ], */
        "@typescript-eslint/prefer-optional-chain": [
          "error"
        ],
        /* "@typescript-eslint/prefer-readonly": [
          "error",
          {
            "onlyInlineLambdas": true
          }
        ], */
        /* "@typescript-eslint/prefer-readonly-parameter-types": [
          "error",
          {
            "checkParameterProperties": true
          }
        ], */
        /* "@typescript-eslint/prefer-reduce-type-parameter": [
          "error"
        ], */
        /* "@typescript-eslint/prefer-regexp-exec": [
          "error"
        ], */
        /* "@typescript-eslint/prefer-string-starts-ends-with": [
          "error"
        ], */
        "@typescript-eslint/prefer-ts-expect-error": [
          "error"
        ],
        /* "@typescript-eslint/promise-function-async": [
          "error",
          {
            "allowAny": false,
            "allowedPromiseNames": [
              "Thenable"
            ],
            "checkArrowFunctions": true,
            "checkFunctionDeclarations": true,
            "checkFunctionExpressions": true,
            "checkMethodDeclarations": true
          }
        ], */
        "@typescript-eslint/quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true,
            "avoidEscape": true
          }
        ],
        /* "@typescript-eslint/require-array-sort-compare": [
          "error",
          {
            "ignoreStringArrays": false
          }
        ], */
        /* "@typescript-eslint/require-await": [
          "error"
        ], */
        /* "@typescript-eslint/restrict-plus-operands": [
          "error",
          {
            "checkCompoundAssignments": true
          }
        ], */
        /* "@typescript-eslint/restrict-template-expressions": [
          "error",
          {
            "allowAny": false,
            "allowBoolean": false,
            "allowNullish": false,
            "allowNumber": false
          }
        ], */
        /* "@typescript-eslint/return-await": [
          "error",
          "always"
        ], */
        "@typescript-eslint/semi": [
          "error",
          "always",
          {
            "omitLastInOneLineBlock": false
          }
        ],
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "asyncArrow": "never",
            "named": "never"
          }
        ],
        /* "@typescript-eslint/strict-boolean-expressions": [
          "error",
          {
            "allowAny": false,
            "allowNullableBoolean": false,
            "allowNullableNumber": false,
            "allowNullableObject": true,
            "allowNullableString": false,
            "allowNumber": true,
            "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": true
            "allowString": true
          }
        ], */
        /* "@typescript-eslint/switch-exhaustiveness-check": [
          "error"
        ], */
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "lib": "never",
            "path": "never",
            "types": "prefer-import"
          }
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "error",
          {
            "after": true,
            "before": false,
            "overrides":
            {
              "arrow":
              {
                "after": true,
                "before": true
              },
              "colon":
              {
                "after": true,
                "before": false
              },
              "parameter":
              {
                "after": true,
                "before": false
              },
              "property":
              {
                "after": true,
                "before": false
              },
              "returnType":
              {
                "after": true,
                "before": false
              },
              "variable":
              {
                "after": true,
                "before": false
              }
            }
          }
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrayDestructuring": true,
            "arrowParameter": true,
            "memberVariableDeclaration": true,
            "objectDestructuring": true,
            "parameter": true,
            "propertyDeclaration": true,
            "variableDeclaration": true,
            "variableDeclarationIgnoreFunction": false
          }
        ],
        /* "@typescript-eslint/unbound-method": [
          "error",
          {
            "ignoreStatic": false
          }
        ], */
        "@typescript-eslint/unified-signatures": [
          "error"
        ],
        "brace-style": "off",
        "camelcase": "off",
        "comma-dangle": "off",
        "comma-spacing": "off",
        "default-param-last": "off",
        "dot-notation": "off",
        "func-call-spacing": "off",
        "indent": "off",
        "init-declarations": "off",
        "keyword-spacing": "off",
        "lines-between-class-members": "off",
        "max-len": [
          "error",
          {
            "code": 160
          }
        ],
        "no-array-constructor": "off",
        "no-dupe-class-members": "off",
        "no-duplicate-imports": "off",
        "no-empty-function": "off",
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-implied-eval": "off",
        "no-invalid-this": "off",
        "no-loop-func": "off",
        "no-loss-of-precision": "off",
        "no-magic-numbers": "off",
        "no-redeclare": "off",
        "no-return-await": "off",
        "no-shadow": "off",
        "no-throw-literal": "off",
        "no-unused-expressions": "off",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-useless-constructor": "off",
        "quotes": "off",
        "require-await": "off",
        "semi": "off",
        "space-before-function-paren": "off"
      }
    },
    {
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "files": [
        "*.component.html"
      ],
      "rules": {
        "@angular-eslint/template/banana-in-box": [
          "error"
        ],
        "@angular-eslint/template/cyclomatic-complexity": [
          "error",
          {
            "maxComplexity": 10
          }
        ],
        "@angular-eslint/template/no-call-expression": [
          "error"
        ],
        "@angular-eslint/template/no-negated-async": [
          "error"
        ],
        "@angular-eslint/template/no-positive-tabindex": [
          "error"
        ],
        "@typescript-eslint/quotes": [
          "error",
          "double",
          {
            "allowTemplateLiterals": true,
            "avoidEscape": true
          }
        ],
        "max-len": [
          "error",
          {
            "code": 160
          }
        ],
        "quotes": "off"
      }
    },
    {
      "extends": [
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "files": [
        "*.component.ts"
      ]
    }
  ],
  "root": true
}
