/* SG
# Form

Forms are styled with `.form-*` classes.

```
<form class="form-h">
    <ul class="form-group">
        <li class="field-group">
            <label class="form-label" for="name">Name</label>
            <input class="form-field" type="text" id="name" name="name" placeholder="Enter name">
        </li>
        <li class="field-group">
            <label class="form-label" for="email">Email</label>
            <input class="form-field" type="text" id="email" name="email" placeholder="Enter email">
        </li>
    </ul>    
</form>
<form class="form-v">
    <ul class="form-group">
        <li class="field-group">
            <label class="form-label" for="name">Name</label>
            <input class="form-field" type="text" id="name" name="name" placeholder="Enter name">
        </li>
        <li class="field-group">
            <label class="form-label" for="email">Email</label>
            <input class="form-field" type="text" id="email" name="email" placeholder="Enter email">
        </li>
    </ul>    
</form>
```
*/

/* SG
# Form/Fieldset

Fieldsets are styled with a `.fieldset` class and have a `<legend>` tag as the first child.

```
<form class="form-v">
    <fieldset class="fieldset">
        <legend>Contact</legend>
        <ul class="form-group">
            <li class="field-group">
                <label class="form-label" for="name">Name</label>
                <input class="form-field" type="text" id="name" name="name" placeholder="Enter name">
            </li>
            <li class="field-group">
                <label class="form-label" for="email">Email</label>
                <input class="form-field" type="text" id="email" name="email" placeholder="Enter email">
            </li>
        </ul>
    </fieldset>    
</form>
```
*/

/* SG
# Form/Label

Coming soon.

```
```
*/

/* SG
# Form/Field

Form fields are styled with a `.form-field` class. Different styles are applied based on the form control.

```
<form class="form-v">
    <ul class="form-group">
        <li class="field-group">
            <label class="form-label" for="name">Name</label>
            <input class="form-field" type="text" id="name" name="name" placeholder="Enter name">
        </li>
        <li class="field-group">
            <label class="form-label" for="gender">Gender</label>
            <select class="form-field" name="gender" id="gender">
                <option>Select</option>
                <option>Female</option>
                <option>Male</option>
            </select>
        </li>
        <li class="field-group">
            <label class="form-label" for="language">Language</label>
            <select class="form-field" name="language" id="language" multiple>
                <option>English</option>
                <option>French</option>
                <option>Spanish</option>
            </select>
        </li>
        <li class="field-group">
            <label class="form-label" for="notes">Notes</label>
            <textarea class="form-field" name="notes" id="notes"></textarea>
        </li>
    </ul>    
</form>
```
*/

/* SG
# Form/Field Group

Coming soon.

```
```
*/

@import '../../core/functions';
@import '../../core/mixins';
@import '../../core/variables';

// Form styles
:host {
	&.fieldset {
		border: rem(1) solid color(blue);
		padding: rem(6 10 12);
	}

	&.form-field {
		@include animate(box-shadow);

		background-color: inherit;
		border: rem(1) solid color(gray);
		padding: rem(12);

		&:hover {
			border: rem(1) solid color(black);
		}

		&:focus {
			@include shadow(1, blue);

			border: rem(1) solid color(blue);
		}

		&::-webkit-input-placeholder {
			color: color(dk-gray);
			opacity: 0.54;
		}

		&:-ms-input-placeholder {
			color: color(dk-gray);
			opacity: 1;
		}

		&::-moz-placeholder {
			color: color(dk-gray);
			opacity: 1;
		}

		&:-moz-placeholder {
			color: color(dk-gray);
			opacity: 1;
		}

		&::placeholder {
			color: color(dk-gray);
			opacity: 1;
		}
	}

	&.form-group {
		max-width: 100%;
	}

	&.form-label {
		font-size: $font-md;

		&:required::after,
		&[required]::after {
			content: '\2217';
			color: color(red);
		}
	}

	&select.form-field {
		max-height: rem(80);
		padding-left: rem(6);

		&::-ms-value {
			background-color: color(lt-white);
			color: color(lt-black);
		}
	}

	&textarea.form-field {
		height: rem(100);
	}
}

// Credit: https://webdesign.tutsplus.com/tutorials/building-responsive-forms-with-flexbox--cms-26767
:host-context(.form-h),
:host-context(.form-v) {
	&.field-group {
		@include row;

		flex-wrap: wrap;
		padding-bottom: rem(8);
	}

	&.form-field {
		flex: 1 0 rem(220);
	}

	&.form-label {
		flex: 1 0 rem(120);
		max-width: rem(220);
	}
}

:host-context(.form-h) {
	&.field-group {
		flex: 1 0 rem(120);
	}

	&.form-group {
		@include row;

		flex-wrap: wrap;
	}
}

:host-context(.form-v) {
	&.field-group {
		&:last-child {
			padding-bottom: 0;
		}
	}
}

// Checkbox styles
input[type='checkbox'],
input[type='radio'] {
	margin-right: rem(16);
	vertical-align: middle;
}

.checkbox,
.radio {
	display: none;
}

.checkbox-group .checkbox,
.radio-group .radio {
	@include flex(1, 0, 0);

	flex-basis: 50%;
}

.checkbox-label::before,
.radio-label::before {
	content: '\00a0';

	background-color: color(lt-gray);
	display: inline-block;
	height: rem(16);
	margin-right: rem(6);
	vertical-align: middle;
	width: rem(16);
}

.radio-label::before {
	border-radius: 50%;
}

.checkbox:checked + .checkbox-label::before,
.radio:checked + .radio-label::before {
	background-color: color(blue);
	border: rem(2) solid color(lt-gray);
}
